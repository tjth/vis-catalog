<div class="toast"></div>
<div id="menu-shadow" ng-init="menuVisible = false" ng-show="menuVisible"></div>
<header ng-class="page.headerClass">
    <div id="menu-button" ng-click="menuVisible = !menuVisible" >
        <div ng-class="{'hamburger half': menuVisible, 'hamburger': !menuVisible}"></div>
    </div>
    
    <div id="breadcrumb">
        <div class="title" ng-cloak>{[{page.title}]}</div>
        <div ng-show="page.secondaryTitle">
            <div class="arrow"></div>
            <div class="title secondary" ng-cloak>{[{page.secondaryTitle}]}</div>
        </div>
    </div>
    
    <div id="search" ng-init="showSearch = false" ng-class="{'active' : showSearch}" 
         ng-show="page.searchEnabled">
        <div class="icon" 
             ng-click="showSearch = !showSearch; clearSearch(); menuVisible = false; focusSearch();"
             ng-disabled="menuVisible">
        </div>
        <input type="text" placeholder="Search" 
               ng-model="searchQuery" 
               ng-model-options="{debounce:500}"
               ng-show="showSearch"
               ng-disabled="menuVisible" />
    </div>
</header>

<div id="menu" ng-show="menuVisible" ng-include="'/partials/menu.html'" ng-controller="menuController">
</div>

<section class="viewport">
    <div id="mask" ng-show="menuVisible" ng-click="menuVisible = false"></div>
    <div ng-view class="ngview page" ng-class="page.class"></div>
</section>

<script>       
    
    // From http://stackoverflow.com/questions/3115982/how-to-check-javascript-array-equals
    function arraysEqual(a, b) {
      if (a === b) return true;
      if (a == null || b == null) return false;
      if (a.length != b.length) return false;

      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    }
    
    var app = angular.module("app", ['ngRoute', 'ngAnimate', 'ngResource', 'truncate', 'flow']);

    app.config(function($interpolateProvider) {
          $interpolateProvider.startSymbol('{[{');
          $interpolateProvider.endSymbol('}]}');
    });
    
    app.config(['$routeProvider',
        function($routeProvider) {
            $routeProvider.
            when('/', {
                templateUrl: 'partials/main.html',
                controller: 'masonController',
            }).
            when('/visualisations/:id', {
                templateUrl: 'partials/visualisation.html',
                controller: 'visualisationController',
            }).
            when('/submit/advert', {
                templateUrl: 'partials/submit-advert.html',
                controller: 'submitAdvertController',
            }).
            when('/submit/visualisation', {
                templateUrl: 'partials/submit-visualisation.html',
                controller: 'submitVisualisationController',
            }).               
            when('/moderate', {
                templateUrl: 'partials/moderate.html',
                controller: 'moderateController',
            }).
            when('/schedule', {
                templateUrl: 'partials/schedule.html',
                controller: 'scheduleController',
            }).
            when('/schedule/timeslot/:id', {
                templateUrl: 'partials/edit-timeslot.html',
                controller: 'editTimeslotController',
            }).            
            when('/sign-in', {
                templateUrl: 'partials/sign-in.html',
                controller: 'signInController',
            }).
            when('/request-access', {
                templateUrl: 'partials/request-access.html',
                controller: 'requestAccessController',
            }).
            otherwise({
                redirectTo: '/'
            });
      }]);
    
    app.controller('mainController', function($scope, $rootScope, $route, User) {
        $rootScope.user = null;
        
        $rootScope.logIn = function() {
            User.getCurrent({authentication_key:localStorage.getItem("authentication_key")}, 
                // Success
                function(user) {
                    $rootScope.user = user;
                },
                // Failure
                function() {
                    console.log("ERROR")
                    localStorage.removeItem("authentication_key");
                    $rootScope.user = null;
                }       
            );
        }

        $scope.clearSearch = function() { jQuery("#search input").val(""); }
            
        $scope.$on('$routeChangeSuccess', function(next, current) { 
            $scope.menuVisible = false;
         });
        
        $scope.focusSearch = function() {
            setTimeout(function() {
                $("#search input").focus()
            }, 500);
        }

        if (localStorage.getItem("authentication_key") != null) {
            $rootScope.logIn();
        }
    });
        
    app.factory('Visualisation', ['$resource',
        function($resource){
            return $resource('visualisations/:id.json', {id : "@id"}, {
                query: { method:'GET', url:'visualisations.json', isArray:true },
                approve: { method:'PATCH', url:'visualisations/:id/approve.json'},
                reject: { method:'PATCH', url:'visualisations/:id/reject.json'}
            });
    }]);

    app.factory('Comments', ['$resource',
        function($resource){
            return $resource('comments/:id.json', {id : "@id"}, {
                query: { method:'GET', url:'comments.json', isArray:true },
                approve: { method:'PATCH', url:'comments/:id/approve.json'},
                reject: { method:'PATCH', url:'comments/:id/reject.json'}
            });
    }]);

    app.factory('Timeslot', ['$resource',
        function($resource){
            return $resource('timeslots', {}, {
                query: { method:'GET', isArray:true },
            });
    }]);
    
    app.controller('masonController', function($scope, $rootScope, Visualisation, $routeParams, $location) {
        $rootScope.page = {title: "Visualisations",  headerClass:"visualisations", searchEnabled : true, class:"visualisations"}
    
        $scope.visItems = []
        
        $scope.goToVisualisation = function(item) {
            $location.path("/visualisations/"+ item.id);
        }
        
        setTimeout(function() { 
            $scope.visItems = Visualisation.query($location.search())
        }, 500);
    });
    
    function showToast(msg, duration) {
        duration = duration || 5000;
        
        $(".toast").fadeOut();
        
        setTimeout( function() {
            $(".toast").html(msg);
            $(".toast").fadeIn();
        }, 500);
        
        if (duration != -1) {
            setTimeout( function() {
                $(".toast").fadeOut();
            }, duration);
        }
    }    
    
    function hideToast() {
        $(".toast").fadeOut();
    }
</script>

